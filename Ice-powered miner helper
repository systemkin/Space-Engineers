//Name all containers for ore as a group "Containers" and cockpit as a "Cockpit".
//Calculates amount of ice in containers and time to consume it. Shows results on a screen
//Calculates the percentage of containers filled
public Program()
{
    Runtime.UpdateFrequency=UpdateFrequency.Update100;
}
public void Main(string arg, UpdateType updateSource)
{
    IMyBlockGroup group = GridTerminalSystem.GetBlockGroupWithName("Containers");

    List<IMyTerminalBlock> generators = new List<IMyTerminalBlock>();
    GridTerminalSystem.GetBlocksOfType<IMyGasGenerator>(generators);

    List<IMyTerminalBlock> blocks = new List<IMyTerminalBlock>();

    group.GetBlocks(blocks);
    double amount = 0;
    MyFixedPoint size = 0;
    MyFixedPoint maxSize = 0;
    foreach (IMyEntity p in blocks)
    {
        MyItemType icey = new MyItemType("MyObjectBuilder_Ore", "Ice");
        amount += p.GetInventory().GetItemAmount(icey).ToIntSafe();
        size += p.GetInventory().CurrentVolume;
        maxSize += p.GetInventory().MaxVolume;
    }
    
    IMyCockpit cockpit = GridTerminalSystem.GetBlockWithName("Cockpit") as IMyCockpit;
    
    IMyTextSurface surf = cockpit.GetSurface(1);
    IMyTextSurface surf2 = cockpit.GetSurface(2);
    surf.ContentType = ContentType.TEXT_AND_IMAGE;
    surf2.ContentType = ContentType.TEXT_AND_IMAGE;
    surf.FontSize= 4;   
    surf2.FontSize= 4;
    surf.WriteText("Ice: " + amount.ToString() + "\n" + "Time:\n" + amount/(generators.Count*5)+ " s"); //amount/(5*amount of o2/h2 generators


    surf2.WriteText("Filled:\n" + ((double) size/((double) maxSize)*100).ToString("0") + "%");
}
 
